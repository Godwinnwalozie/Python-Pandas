{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2a3cbcff-dc24-46a7-8a15-c966d3a09f97",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a df with names and concatenate gmail to first.lastname"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d71bfd70-cdf4-410f-ad5f-16ca43b13d06",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "986f062f-a12a-4c53-9621-ba15e6d89d82",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "58fea31d-2007-430e-a340-27fe92bfb491",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Godwin</td>\n",
       "      <td>Nwalozie</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Mary</td>\n",
       "      <td>Ogbuagu</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Nora</td>\n",
       "      <td>Dinge</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Seun</td>\n",
       "      <td>Adebara</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  first_name last_name  age\n",
       "0     Godwin  Nwalozie   30\n",
       "1       Mary   Ogbuagu   24\n",
       "2       Nora     Dinge   12\n",
       "3       Seun   Adebara   34"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coy = pd.DataFrame( {'first_name' : ['Godwin', 'Mary', 'Nora', 'Seun'],\n",
    "              'last_name' : ['Nwalozie' , 'Ogbuagu' , 'Dinge', 'Adebara'],\n",
    "              'age' : [30, 24, 12, 34]})\n",
    "coy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "bb1fd298-420e-494a-b502-66a5b3334b33",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-93-3e1f87cea221>:4: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  coy.append(new).reset_index(drop =True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>age</th>\n",
       "      <th>email</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Godwin</td>\n",
       "      <td>Nwalozie</td>\n",
       "      <td>30</td>\n",
       "      <td>g.nwaloziegmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Mary</td>\n",
       "      <td>Ogbuagu</td>\n",
       "      <td>24</td>\n",
       "      <td>m.ogbuagugmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Nora</td>\n",
       "      <td>Dinge</td>\n",
       "      <td>12</td>\n",
       "      <td>n.dingegmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Seun</td>\n",
       "      <td>Adebara</td>\n",
       "      <td>34</td>\n",
       "      <td>s.adebaragmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Musibao</td>\n",
       "      <td>Mudasiru</td>\n",
       "      <td>35</td>\n",
       "      <td>ff</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  first_name last_name  age                email\n",
       "0     Godwin  Nwalozie   30  g.nwaloziegmail.com\n",
       "1       Mary   Ogbuagu   24   m.ogbuagugmail.com\n",
       "2       Nora     Dinge   12     n.dingegmail.com\n",
       "3       Seun   Adebara   34   s.adebaragmail.com\n",
       "4    Musibao  Mudasiru   35                   ff"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# add a new column with first name and last name\n",
    "coy['email'] = coy.apply(lambda x: (x.first_name[0] + '.' + x.last_name + 'gmail.com')\\\n",
    "        .lower(), axis =1 )\n",
    "coy.append(new).reset_index(drop =True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "4dfdd49f-070c-4364-a0e2-5c402e123e34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>age</th>\n",
       "      <th>email</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Godwin</td>\n",
       "      <td>Nwalozie</td>\n",
       "      <td>30</td>\n",
       "      <td>g.nwaloziegmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Mary</td>\n",
       "      <td>Ogbuagu</td>\n",
       "      <td>24</td>\n",
       "      <td>m.ogbuagugmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Nora</td>\n",
       "      <td>Dinge</td>\n",
       "      <td>12</td>\n",
       "      <td>n.dingegmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Seun</td>\n",
       "      <td>Adebara</td>\n",
       "      <td>34</td>\n",
       "      <td>s.adebaragmail.com</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  first_name last_name  age                email\n",
       "0     Godwin  Nwalozie   30  g.nwaloziegmail.com\n",
       "1       Mary   Ogbuagu   24   m.ogbuagugmail.com\n",
       "2       Nora     Dinge   12     n.dingegmail.com\n",
       "3       Seun   Adebara   34   s.adebaragmail.com"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coy['email'] = coy.apply(lambda x: (x.first_name[0] + '.' + x.last_name + 'gmail.com')\\\n",
    "        .lower(), axis =1 )\n",
    "coy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75da88cf-3fb4-4e68-8974-5e561860b1f1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "320ac8e4-8ca8-4996-9aae-39d585a4d375",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
